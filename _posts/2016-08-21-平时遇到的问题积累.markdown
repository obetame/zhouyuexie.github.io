---
layout: post
title:  "平时遇到的问题积累"
date:   2016-08-05 11:21:03 +0800
tags: js,css,html
---

## 1. css问题

#### 绝对定位

对于元素内有绝对定位的元素，不能使用tranform属性，也就是说不能使用动画，否则绝对定位的元素无法正常显示,这是规定的.所以用了绝对定位或者fixed定位的,最好直接放在body下.

*2016-08-05*

#### 移动端

最近发现开发移动端网页的时候发现点击标签`a`会出现灰色的背景色,我用的iphone6测试,后来一查发现是ios上的Safari浏览器的一个属性导致的,就是这个:

```CSS3
-webkit-tap-highlight-color:transparent;
```

将你的`a`标签加上这个属性就好了,这个属性的意思是:当用户点击浏览器中的链接或JavaScript的可点击的元素时，覆盖显示的高亮颜色。

*2016-08-24*

## 2. 浏览器

#### 1. safari

**表现:input无法输入.**

在safari浏览器(暂时没有测试其它浏览器)下如果css样式设置了`user-select: none;`,那么input会无法被正确使用,也就是无法点击和输入.

*2016-08-11*

#### 2. safari

**表现:网站无法记录session实现登陆.**

用fiddler检查发现能做到设置cookie,可是当你关掉微信浏览器后再次打开,请求头中却没有了那个cookie,网上找了很多回答,有些人说是safari浏览器中默认的“接受cookie”是设置成“从访问过的网页”.测试网页登陆时候发现无法登陆,查看才发现session每次都是`undefined`,也就是说safari可能每次打开网页都清空了cookie.虽然你可以在设置下面找到safari打开然后手动设置成"总是".但是这个办法只能解决你的问题,并不能解决用户的问题,然后我去stackvoerflow上找到一篇回答,点击[这里查看](http://stackoverflow.com/questions/2138245/session-is-lost-and-created-as-new-in-every-servlet-request).

第一名的回答说了:几乎所有的浏览器不接受没有域名的cookies.所以你需要一个域名.

所以解决办法就是将你的ip地址更换成域名去访问,也就是说本来是`http://192.168.31.86:3000`访问服务器的,你要换成你的域名去访问,比如`http://yourlocation.com`,这就很简单了,改一下你的`hosts`就好了.简单的说就是用Fiddler开代理,这个应该挺简单的吧.

如果还不行,那你就直接上测试服务器测试好了,更简单快捷.

*2016-08-10*

#### 3. iframe跨域

**表现:无法获取到iframe里面的dom**

浏览器禁止获取到跨域的iframe,网上很多使用js解决办法,而且都是号称"真正的....",可是都没有考虑到跨域问题,我就不想被打脸了,所有我这里先声明你不一定有用....

我的解决办法很简单,没有用到一丁点js代码,只用了css.

先看代码:

```html
<!DOCTYPE html>
<html>
<head>
  <title>iframe跨域</title>
</head>
<body>
  <iframe name="info" width="100%" id="info" height="100%" frameborder="0" scrolling="no" src="http://baidu.com"></iframe>
</body>
</html>
```

如果你直接复制这段代码运行你会发现高度根本就没有自适应,缩成一块了.你再观察仔细一点的话你会发现由于`body`高度没有设置,所以我们要这样:

```html
<!DOCTYPE html>
<html>
<head style="height: 100%;width: 100%;position: absolute;padding: 0;margin: 0;">
  <title>iframe跨域</title>
</head>
<body>
  <iframe name="info" width="100%" id="info" height="100%" frameborder="0" scrolling="yes" src="http://baidu.com"></iframe>
</body>
</html>
```

重点是`position: absolute;` 和 `height: 100%;width: 100%;`,如果不设置 `position: absolute;` 那么你的宽度和高度都没反应的.

而且iframe需要设置`scrolling="yes"`, 否则没法滚动屏幕内容.

*2016-08-23*

## js

#### 1. 设置的`color`变成`rgb`

一次设置元素`color`的时候,再去匹配是否相等然后一直得到错误的结果:

```javascript
//获取所有类为your的元素
var yours = document.getElementsByClassName('your');

//使用了underscore中的each,给序号大于2的元素加上颜色
_.each(yours,function(element,index){
  // index不等于1的时候设置颜色
  if(index!==1){
    element.style.color = "#d5d5d5";
    element.style.borderColor = "#d5d5d5";
  }
});

//判断class等于your的其中一个元素color是否等于"#d5d5d5"
var thisIdColor = document.getElementById("your3").style.color;
if(thisIdColor==="#d5d5d5"){
  // 接下来的操作
  return;
}

//意外的是浏览器一直不执行下面的代码,
//而又因为一些原因我都是一直在手机上测试.
```

弄了半天才发现thisIdColor不等于"#d5d5d5",`document.getElementById("your3").style.color`返回的是一个rgb格式的颜色代码,而不是十六进制的.所以你要这样:

```javascript
if(thisIdColor.replace(/\s+/g,"")==="rgb(213,213,213)"){
  // 接下来的操作
  return;
}
```

你还要记得去掉空格,否则又会得到错误的结果.

*2016-08-21*

#### js倒计时

如果你做过js倒计时的插件,你可能觉得很简单,直接用`setTimeout`或者`setInterval`定时循环就可以了,但是今天我要说的是另外的一个问题:移动端定时.

1. `setTimeout`定时器:

```javascript
var countdown = function(){
  // 你的代码
  // 再写下面这行,一秒后继续执行这个函数
  setTimeout("countdown()",1000);
}
countdown();//启动这个定时函数
```

2. `setInterval`定时器:

```javascript
var countdown = setInterval(function(){
  // 你的代码
},1000);
```

从上面的两段代码看,是不是觉得`setInterval`定时器代码更简单更容易呢?

而且`setInterval`能确保你的函数一秒执行一次,而`setTimeout`就不行了,如果你的函数写了过多的运算操作,超过了一秒的话那`setTimeout`的运算公式:`运算时间="函数操作的时间"+"setTimeout定时的时间"`.

所以我们大部分时候都是用的`setInterval`定时器,不过后来发现一个问题:就是在移动端界面(iPhone,暂时不知道Android怎么样)上使用`setInterval`,浏览器会很神器的"暂停"定时器,触发这个"暂停"操作的动作就是滑动屏幕,如果你滑动的动作比较慢,再放开手的时候你会发现定时器比正常时间少了,也就是说你触摸的时候定时器确实处于"暂停"或者"冷冻"状态.

我来说一下解决办法吧:

**打补丁**:你可以自己处理一下,也就是记录当前的时间,每次检查一下定时是否正确,如果不正确就改到正确的值,这个办法需要再增加一个定时器,不过我有更好的方法,请看下面:

```javascript
// 首先记录计时器启动的时间
var start = Date.now();

// 计时器
var countdown = setInterval(function(){
  // 你的代码
},1000);

// 添加一个touchend事件,也就是触摸结束后的事件
window.addEventListener("touchend",function(){
  // 将当前的时间和开始的时间进行对比
  var now = Date.now();
  // 获取到开始到现在的秒数
  var ms = parseInt((now-start)/1000);
  // 剩下的就是你的操作了
  // 比如将这个正确的值替换到你得DOM中
});
```

差点忘了`setTimeout`还有一个问题,就是执行一段时间后会突然停一下然后立即又执行了,对于这个现象我是搞不懂了,感兴趣的可以复制我下面这段代码放到你的浏览器上执行.

```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>测试</title>
</head>
<body>
  <span id="date" style="font-size: 10em;"></span>
<script type="text/javascript">
  var date = document.getElementById("date");
  date.innerHTML = 1;
  function change(){
    date.innerHTML++;
    setTimeout("change()",100);
  }
  change();
</script>
</body>
</html>
```

*2016-08-25*

**本文将持续更新,最后更新时间:2016-08-25**